<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Initiate_Renewal_Action</name>
        <label>Initiate Renewal Action</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>initiateRenewal</actionName>
        <actionType>initiateRenewal</actionType>
        <connector>
            <targetReference>AddCreatedOrderIdsToCollection</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SetRenewalErrorVariables</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>renewAssetIds</name>
            <value>
                <elementReference>AssetIdsWithMatchingAccountIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>renewOutputType</name>
            <value>
                <elementReference>OutputType</elementReference>
            </value>
        </inputParameters>
        <nameSegment>initiateRenewal</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>SendErrorEmailToRenewalOrderContacts</name>
        <label>Send Error Email to Renewal Order Contacts</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>IterateOverRenewalOrdersToGetAccountIDs</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>IterateOverRenewalOrdersToGetAccountIDs.Account.Owner.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>EmailSubjectFailure</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBodyError</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>useLineBreaks</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <description>Calls an action to send an email to the contacts associated with orders that were successfully renewed by the Initiate Renewal action.</description>
        <name>SendSuccessEmailToRenewalOrderContacts</name>
        <label>Send Success Email to Renewal Order Contacts</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>IterateOverRenewalOrdersToGetAccountIDs</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>IterateOverRenewalOrdersToGetAccountIDs.Account.Owner.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>EmailSubjectSuccess</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>useLineBreaks</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>Adds the Account ID of the current record to the AccountsWithExpiringAssetsIds collection variable.</description>
        <name>AddAccountIdToCollection</name>
        <label>Add Account ID to Collection</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>AccountsWithExpiringAssetsIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverAssets.AccountId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverAssets</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the Asset IDs of the current account record to the AssetIdsWithMatchingAccountIds collection variable.</description>
        <name>AddAssetIdsWithMatchingAccountIdToCollection</name>
        <label>Add Asset IDs with Matching Account ID to Collection</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>AssetIdsWithMatchingAccountIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverFilteredAssets.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverFilteredAssets</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the Asset ID of the current record to the ExpiringAssetIds collection.</description>
        <name>AddAssetIdToCollection</name>
        <label>Add Asset ID to Collection</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>ExpiringAssetIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverAssets.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>StandaloneAssetIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverAssets.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HaveAccountId</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AddCreatedOrderIdsToCollection</name>
        <label>Add Created Order Ids to Collection</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>lstOrderIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Initiate_Renewal_Action.renewRecordId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AssetIdsWithMatchingAccountIds</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>AssetIdsWithMatchingAccountIds</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverAccountIds</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Error_Message</name>
        <label>Assign Error Message</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>errMsgToSendToEmail</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>GetRenewalOrders</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign the Faulty Asset Ids into a list from Strings.</description>
        <name>AssignCommaSeparatedAssetString</name>
        <label>Assign Comma Separated Asset String</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>occurranceOfCommaCollectionVariable</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>stringFaultyAssetIds</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>fetchFaultyAssetIDs</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CheckIfErroredAssetIdsIsMultiple</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign the Rest of the Asset IDs in the Faulty Asset Ids</description>
        <name>AssignRestAssetIds</name>
        <label>Assign Rest Asset Ids</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>lstFaultyAssetIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>splitVariable</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>occurranceOfCommaCollectionVariable</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>occurrenceofCommaVariable</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>stringFaultyAssetIds</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordSubstitueVar</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ConvertAssetStringToList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignRootAssetId</name>
        <label>Assign Root Asset Id</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>AssetIdsWithMatchingAccountIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopOverFilteredRootAssetRecords.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopOverFilteredRootAssetRecords</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignRootAssets</name>
        <label>Assign Root Assets</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>RootAssetIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverEachGroupFromTheRelationships.AssetId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AssetRecord.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateOverEachGroupFromTheRelationships.Asset.AccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AssetRecord.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateOverEachGroupFromTheRelationships.AssetId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RootAssetRecords</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AssetRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverEachGroupFromTheRelationships</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign the Last Asset Ids to the Faulty Asset Id</description>
        <name>AssignTheLastAssetID</name>
        <label>Assign the Last Asset ID</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>lstFaultyAssetIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>stringFaultyAssetIds</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ConvertAssetStringToList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>GetGroupingKeyFromAssetRelationship</name>
        <label>Get Grouping Key From Asset Relationship</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>AssetRelationshipGroupingKey</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverAssetRelationships.GroupingKey</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverAssetRelationships</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Remove all the faulty asset ids and proceed with the rest.</description>
        <name>Remove_Faulty_Asset_Ids</name>
        <label>Remove Faulty Asset Ids</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>AssetIdsWithMatchingAccountIds</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>lstFaultyAssetIds</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_if_the_Asset_Id_Collection_is_Not_Empty</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>RemoveAllAssetIDs</name>
        <label>Remove All Asset IDs</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>AssetIdsWithMatchingAccountIds</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>AssetIdsWithMatchingAccountIds</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>IterateOverAccountIds</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>RemoveBundledAssetsFromStandaloneAssetCollection</name>
        <label>Remove Bundled Assets From Standalone Asset Collection</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>StandaloneAssetIds</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>IterateOverEachGroupFromTheRelationships.AssetId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>StandaloneAssetIds</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>IterateOverEachGroupFromTheRelationships.RelatedAssetId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>FilteringRootAssetFromAssetRelationship</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Will Remove the single Faulty Asset Id.</description>
        <name>RemoveFaultyAssetId</name>
        <label>Remove Faulty Asset Id</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>AssetIdsWithMatchingAccountIds</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>stringFaultyAssetIds</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_if_the_Asset_Id_Collection_is_Not_Empty</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>RetryCountValueDecrease</name>
        <label>Retry Count Value Decrease</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>retryCount</assignToReference>
            <operator>Subtract</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Activate_Order</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the renewalErrorMessage variable to the value of the error message from the Initiate Renewal action and sets the assetsWithOrderRenewalErrors variable to the value of the getAssetsWithOrderRenewalErrorsIds formula.</description>
        <name>SetRenewalErrorVariables</name>
        <label>Set Renewal Error Variables</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>renewalErrorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HaveAssetsWithRenewalErrorsIDs</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <description>Filters records from the Assets from GetExpiringAssets record collection with account IDs that match the current account ID. Stores the filtered collection results in the Assets from FilterAssetsWithMatchingAccountId record collection.</description>
        <name>FilterAssetsWithMatchingAccountId</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Filter Assets with Matching Account ID</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNextValueToReference>currentItem_FilterAssetsWithMatchingAccountId</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_Expiring_Assets</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_FilterAssetsWithMatchingAccountId.AccountId</leftValueReference>
            <operator>Contains</operator>
            <rightValue>
                <elementReference>IterateOverAccountIds</elementReference>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>IterateOverFilteredAssets</targetReference>
        </connector>
    </collectionProcessors>
    <collectionProcessors>
        <description>Filter the Assets on the Basis of Matching Grouping key to fetch the Asset on the top most asset level.</description>
        <name>FilteredAssetRelationshipsbyGroupingKey</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Filtered Asset Relationships by Grouping Key</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNextValueToReference>currentItem_FilteredAssetRelationshipsbyGroupingKey</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>GetAssetRelationships</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_FilteredAssetRelationshipsbyGroupingKey.GroupingKey</leftValueReference>
            <operator>EqualTo</operator>
            <rightValue>
                <elementReference>IterateOverGroupingKeys</elementReference>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>IterateOverEachGroupFromTheRelationships</targetReference>
        </connector>
    </collectionProcessors>
    <collectionProcessors>
        <name>FilteringRootAssetFromAssetRelationship</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Filtering Root Asset From Asset Relationship</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNextValueToReference>currentItem_FilteringRootAssetFromAssetRelationship</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>FilteredAssetRelationshipsbyGroupingKey</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_FilteringRootAssetFromAssetRelationship.RelatedAssetId</leftValueReference>
            <operator>Contains</operator>
            <rightValue>
                <elementReference>IterateOverEachGroupFromTheRelationships.AssetId</elementReference>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>Is_Root_Asset</targetReference>
        </connector>
    </collectionProcessors>
    <collectionProcessors>
        <name>FilterRootAssetsWithAccountId</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Filter Root Assets With Account Id</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNextValueToReference>currentItem_FilterRootAssetsWithAccountId</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>RootAssetRecords</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_FilterRootAssetsWithAccountId.AccountId</leftValueReference>
            <operator>EqualTo</operator>
            <rightValue>
                <elementReference>IterateOverAccountIds</elementReference>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>LoopOverFilteredRootAssetRecords</targetReference>
        </connector>
    </collectionProcessors>
    <decisions>
        <name>Check_if_the_Asset_Id_Collection_is_Not_Empty</name>
        <label>Check if the Asset Id Collection is Not Empty</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>IterateOverAccountIds</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Empty</defaultConnectorLabel>
        <rules>
            <name>NotEmpty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AssetIdsWithMatchingAccountIds</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Initiate_Renewal_Action</targetReference>
            </connector>
            <label>Not Empty</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check the number of commas and spilt the string of Faulty Asset Ids One by one to store in the FaultyAssetIDs Collection.</description>
        <name>CheckForCommastoSplitTheString</name>
        <label>Check For Commas to Split the String</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>AssignRestAssetIds</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>More Than One Comma Present ?</defaultConnectorLabel>
        <rules>
            <name>SingleCommaPresent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>occurrenceofCommaVariable</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignTheLastAssetID</targetReference>
            </connector>
            <label>Single Comma Present ?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Validate If The Asset IDs String should be single Asset Id or multiple Asset Id.
If Single asset id directly remove it from the Asset Id List.
If Multiple Asset Ids present will convert the string to list and then remove it from the Asset Id List.</description>
        <name>CheckIfErroredAssetIdsIsMultiple</name>
        <label>Check if Errored Asset Ids is multiple</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>RemoveFaultyAssetId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Multiple Faulty Asset IDs</defaultConnectorLabel>
        <rules>
            <name>MultipleFaultyAssetIds</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>stringFaultyAssetIds</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>,</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ConvertAssetStringToList</targetReference>
            </connector>
            <label>Multiple Faulty Asset Ids ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>GroupingKeyAlreadyPresent</name>
        <label>Grouping Key Already Present ?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>GetGroupingKeyFromAssetRelationship</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Present</defaultConnectorLabel>
        <rules>
            <name>IsPresent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AssetRelationshipGroupingKey</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>IterateOverAssetRelationships.GroupingKey</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IterateOverAssetRelationships</targetReference>
            </connector>
            <label>Present?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the AssetId of the current record in the loop exists in the ExpiringAssetIds collection variable.</description>
        <name>Have_Asset_ID</name>
        <label>Have Asset ID?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>AddAssetIdToCollection</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Present ?</defaultConnectorLabel>
        <rules>
            <name>Asset_Id_Present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ExpiringAssetIds</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>IterateOverAssets.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>HaveAccountId</targetReference>
            </connector>
            <label>Asset Id Present ?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether an error occurred when attempting to activate the renewal order by checking if the orderActivationErrorMessage variable is not empty or null.</description>
        <name>Have_Errors</name>
        <label>Have Errors?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>SendSuccessEmailToRenewalOrderContacts</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Present ?</defaultConnectorLabel>
        <rules>
            <name>Error_Present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>errMsgToSendToEmail</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>errMsgToSendToEmail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SendErrorEmailToRenewalOrderContacts</targetReference>
            </connector>
            <label>Error Present ?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the AccountId of the current record in the loop exists in the AccountsWithExpiringAssetsIds collection variable.</description>
        <name>HaveAccountId</name>
        <label>Have Account ID?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>AddAccountIdToCollection</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Present ?</defaultConnectorLabel>
        <rules>
            <name>Account_Id_Present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountsWithExpiringAssetsIds</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>IterateOverAssets.AccountId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IterateOverAssets</targetReference>
            </connector>
            <label>Account Id Present ?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether asset records were found by checking if the Assets from GetExpiringAssets record collection is not empty.</description>
        <name>HaveAssetRecords</name>
        <label>Have Asset Records?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Expiring_Assets</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IterateOverAssets</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>HaveAssetRelationshipRecords</name>
        <label>Have Asset Relationship Records?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>IterateOverAccountIds</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>AssetRelationshipRecordsPresent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AssetRelationshipGroupingKey</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAssetRelationships</targetReference>
            </connector>
            <label>Asset Relationship Records Present ?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether assets with renewal order errors were found by checking if the assetsWithOrderRenewalErrorsIds collection is not empty.</description>
        <name>HaveAssetsWithRenewalErrorsIDs</name>
        <label>Have Assets With Renewal Errors IDs?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>RemoveAllAssetIDs</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Present ?</defaultConnectorLabel>
        <rules>
            <name>Present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>fetchFaultyAssetIDs</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignCommaSeparatedAssetString</targetReference>
            </connector>
            <label>Present ?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether renewal orders were created by checking if the RenewalOrderIds collection is not empty.</description>
        <name>HaveOrderIds</name>
        <label>Have Order IDs?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>Order ID Not Present ?</defaultConnectorLabel>
        <rules>
            <name>Order_ID_Present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>lstOrderIds</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>WaitForOrderActivation</targetReference>
            </connector>
            <label>Order ID Present ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Root_Asset</name>
        <label>Is Root Asset ?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>IterateOverEachGroupFromTheRelationships</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Filter_Root_Asset_Collection_Empty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>FilteringRootAssetFromAssetRelationship</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignRootAssets</targetReference>
            </connector>
            <label>Is Filter Root Asset Collection Empty ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsRootAlreadyAdded</name>
        <label>Is Root Already Added</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>AssignRootAssetId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Present ?</defaultConnectorLabel>
        <rules>
            <name>Already_Present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AssetIdsWithMatchingAccountIds</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>LoopOverFilteredRootAssetRecords.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopOverFilteredRootAssetRecords</targetReference>
            </connector>
            <label>Already Present ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsStandaloneAsset</name>
        <label>Is Standalone Asset ?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>IterateOverFilteredAssets</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Standalone ?</defaultConnectorLabel>
        <rules>
            <name>Is_Standalone</name>
            <conditionLogic>1 AND NOT 2</conditionLogic>
            <conditions>
                <leftValueReference>StandaloneAssetIds</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>IterateOverFilteredAssets.Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>AssetIdsWithMatchingAccountIds</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>IterateOverFilteredAssets.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AddAssetIdsWithMatchingAccountIdToCollection</targetReference>
            </connector>
            <label>Is Standalone ?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Initiate Retry if the Error Has occurred.</description>
        <name>RetryTheActivation</name>
        <label>Retry the Activation</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>RetryCountValueDecrease</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>If Retry Count Not Zero</defaultConnectorLabel>
        <rules>
            <name>If_Retry_Count_is_Zero</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>retryCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Error_Message</targetReference>
            </connector>
            <label>If Retry Count is Zero</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <description>Fetch Today&apos;s Date Time.</description>
        <name>currentDateTime</name>
        <dataType>DateTime</dataType>
        <expression>{!$Flow.CurrentDateTime} +{!NoOfDaysInFuture}</expression>
    </formulas>
    <formulas>
        <name>fetchFaultyAssetIDs</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!renewalErrorMessage})) &amp;&amp; CONTAINS({!renewalErrorMessage},&apos;:&apos;) &amp;&amp; CONTAINS({!renewalErrorMessage},&apos;02i&apos;),TRIM(LEFT({!renewalErrorMessage}, FIND(&quot;:&quot;, {!renewalErrorMessage})-1)) ,&apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>occurrenceofCommaVariable</name>
        <dataType>Number</dataType>
        <expression>(LEN({!stringFaultyAssetIds})-LEN(SUBSTITUTE(LOWER({!stringFaultyAssetIds}),&quot;,&quot;,&quot;&quot;)))</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>recordSubstitueVar</name>
        <dataType>String</dataType>
        <expression>RIGHT({!stringFaultyAssetIds},LEN({!stringFaultyAssetIds})-FIND(&apos;,&apos;,{!stringFaultyAssetIds}))</expression>
    </formulas>
    <formulas>
        <name>splitVariable</name>
        <dataType>String</dataType>
        <expression>LEFT({!stringFaultyAssetIds},FIND(&apos;,&apos;,{!stringFaultyAssetIds})-1)</expression>
    </formulas>
    <interviewLabel>RLM Auto Renew {!$Flow.CurrentDateTime}</interviewLabel>
    <label>RLM Auto Renew</label>
    <loops>
        <description>Looping on the Comma Deli metered Id for Adding multiple Asset IDs In the list of faulty Asset Ids</description>
        <name>ConvertAssetStringToList</name>
        <label>Convert Asset String To List</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>occurranceOfCommaCollectionVariable</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CheckForCommastoSplitTheString</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Remove_Faulty_Asset_Ids</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions for each account ID in the AccountsWithExpiringAssetsIds collection.</description>
        <name>IterateOverAccountIds</name>
        <label>Iterate Over Account IDs</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>AccountsWithExpiringAssetsIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>FilterAssetsWithMatchingAccountId</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>HaveOrderIds</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions for each asset relationship record in the AssetRelationships record collection from the GetAssetRelationshipsForExpiringAssets element.</description>
        <name>IterateOverAssetRelationships</name>
        <label>Iterate Over Asset Relationships</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>AssetRelationshipsWithGroupingKey</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>GroupingKeyAlreadyPresent</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>HaveAssetRelationshipRecords</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions for each asset record in the Assets from GetExpiringAssets record collection.</description>
        <name>IterateOverAssets</name>
        <label>Iterate Over Assets</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>Get_Expiring_Assets</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Have_Asset_ID</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>GetAssetRelationshipsForExpiringAssets</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>IterateOverEachGroupFromTheRelationships</name>
        <label>Iterate Over Each Group From The Relationships</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>FilteredAssetRelationshipsbyGroupingKey</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>RemoveBundledAssetsFromStandaloneAssetCollection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>IterateOverGroupingKeys</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions for each asset record in the Assets from FilterAssetsWithMatchingAccountId record collection.</description>
        <name>IterateOverFilteredAssets</name>
        <label>Iterate Over Filtered Assets</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>FilterAssetsWithMatchingAccountId</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>IsStandaloneAsset</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>FilterRootAssetsWithAccountId</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions for each asset relationship grouping key to find the root asset Id that will be used to automatically renew</description>
        <name>IterateOverGroupingKeys</name>
        <label>Iterate Over Grouping Keys</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>AssetRelationshipGroupingKey</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>FilteredAssetRelationshipsbyGroupingKey</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>IterateOverAccountIds</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions for each order record in the Orders from GetRenewalOrders record collection.</description>
        <name>IterateOverRenewalOrdersToGetAccountIDs</name>
        <label>Iterate Over Renewal Orders to Get Account IDs</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>GetRenewalOrders</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Have_Errors</targetReference>
        </nextValueConnector>
    </loops>
    <loops>
        <name>LoopOverFilteredRootAssetRecords</name>
        <label>Loop over filtered root asset records</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>FilterRootAssetsWithAccountId</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>IsRootAlreadyAdded</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Initiate_Renewal_Action</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets all the asset records that are enabled for auto renewal and have a LifeCycleEndDate value of today. Stores the results in the Assets from GetExpiringAssets record collection.</description>
        <name>Get_Expiring_Assets</name>
        <label>Get Expiring Assets</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>HaveAssetRecords</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DoesAutomaticallyRenew</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>LifecycleEndDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>LifecycleEndDate</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>currentDateTime</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <limit>
            <numberValue>500.0</numberValue>
        </limit>
        <object>Asset</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Will Fetch all the Asset Relationships for the Assets on the basis of GroupingKey</description>
        <name>GetAssetRelationships</name>
        <label>Get Asset Relationships</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateOverGroupingKeys</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupingKey</field>
            <operator>In</operator>
            <value>
                <elementReference>AssetRelationshipGroupingKey</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AssetRelationship</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets all the asset relationship records for expiring assets that are enabled for auto renewal and have an AssetRole value of Bundle.</description>
        <name>GetAssetRelationshipsForExpiringAssets</name>
        <label>Get Asset Relationships for Expiring Assets</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateOverAssetRelationships</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AssetRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Bundle</stringValue>
            </value>
        </filters>
        <filters>
            <field>RelatedAssetId</field>
            <operator>In</operator>
            <value>
                <elementReference>ExpiringAssetIds</elementReference>
            </value>
        </filters>
        <object>AssetRelationship</object>
        <outputReference>AssetRelationshipsWithGroupingKey</outputReference>
        <queriedFields>GroupingKey</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Gets all the order records that have an ID in the RenewalOrderIds collection. Stores the results in the Orders from GetRenewalOrders record collection.</description>
        <name>GetRenewalOrders</name>
        <label>Get Renewal Orders</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateOverRenewalOrdersToGetAccountIDs</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>lstOrderIds</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Activate_Order</name>
        <label>Activate Order</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetRenewalOrders</targetReference>
        </connector>
        <faultConnector>
            <targetReference>RetryTheActivation</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>lstOrderIds</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Activated</stringValue>
            </value>
        </inputAssignments>
        <object>Order</object>
    </recordUpdates>
    <sourceTemplate>runtime_revenue_arcflows__Auto_Renew</sourceTemplate>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Expiring_Assets</targetReference>
        </connector>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2025-03-18</startDate>
            <startTime>00:15:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <description>Will store the email body to be sent when order creation is successful</description>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Salesforce auto-renewed assets for account {!IterateOverRenewalOrdersToGetAccountIDs.Account.Name}.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Order ID : {!IterateOverRenewalOrdersToGetAccountIDs.Id}&lt;/p&gt;&lt;p&gt;Order Name : {!IterateOverRenewalOrdersToGetAccountIDs.Name}&lt;/p&gt;&lt;p&gt;Order Date : {!IterateOverRenewalOrdersToGetAccountIDs.EffectiveDate}&lt;/p&gt;&lt;p&gt;Order Total Price : {!IterateOverRenewalOrdersToGetAccountIDs.TotalAmount}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;You’re registered as {!$User.FirstName} {!$User.LastName} in {!$Organization.Name} . Need help? Ask &lt;a href=&quot;https://help.salesforce.com/s/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Agentforce&lt;/a&gt;.&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>EmailBodyError</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Salesforce couldn’t auto-renew assets for account &lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!IterateOverRenewalOrdersToGetAccountIDs.Account.Name}&lt;/span&gt; because an error occurred.&lt;/p&gt;&lt;p&gt;{!errMsgToSendToEmail}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;You’re registered as {!$User.FirstName} {!$User.LastName} in {!$Organization.Name} . Need help? Ask &lt;a href=&quot;https://help.salesforce.com/s/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Agentforce&lt;/a&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <description>Will Store the Email Subject when Order Activation Fails.</description>
        <name>EmailSubjectFailure</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Salesforce couldn’t activate order {!IterateOverRenewalOrdersToGetAccountIDs.OrderNumber} for account {!IterateOverRenewalOrdersToGetAccountIDs.Account.Name}.</text>
    </textTemplates>
    <textTemplates>
        <description>Will Store the Subject Email Details when the Order Activation was Successful</description>
        <name>EmailSubjectSuccess</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Salesforce order {!IterateOverRenewalOrdersToGetAccountIDs.OrderNumber} for account {!IterateOverRenewalOrdersToGetAccountIDs.Account.Name} was activated.</text>
    </textTemplates>
    <variables>
        <name>AccountIdsForRenewalOrders</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Will Store the Collection of Unique Account IDs</description>
        <name>AccountsWithExpiringAssetsIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores a collection of IDs for assets associated with accounts that have account IDs in the AccountsWithExpiringAssetsIds collection variable.</description>
        <name>AssetIdsWithMatchingAccountIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>AssetRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Asset</objectType>
    </variables>
    <variables>
        <description>Stores the Asset Relationship unique grouping key.</description>
        <name>AssetRelationshipGroupingKey</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>AssetRelationshipsWithGroupingKey</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AssetRelationship</objectType>
    </variables>
    <variables>
        <name>currentItem_Filter_Contacts_with_Matching_Account_ID</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>currentItem_FilterAssetsWithMatchingAccountId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Asset</objectType>
    </variables>
    <variables>
        <name>currentItem_FilteredAssetRelationshipsbyGroupingKey</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AssetRelationship</objectType>
    </variables>
    <variables>
        <name>currentItem_FilterExpiringAssetsWithAssetRelationships_0</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Asset</objectType>
    </variables>
    <variables>
        <name>currentItem_FilteringRootAssetFromAssetRelationship</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AssetRelationship</objectType>
    </variables>
    <variables>
        <name>currentItem_FilterRootAssetsWithAccountId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Asset</objectType>
    </variables>
    <variables>
        <name>errMsgToSendToEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>store the collection of unique asset id&apos;s</description>
        <name>ExpiringAssetIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>lstFaultyAssetIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Collection of Order Id</description>
        <name>lstOrderIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>No of Days for fetching the Asset on the basis of LifeCycleEndDate</description>
        <name>NoOfDaysInFuture</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>occurranceOfCommaCollectionVariable</name>
        <dataType>Number</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <description>Set the Output type to Order so that Order IDs will be created.</description>
        <name>OutputType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Order</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores a collection of IDs for assets that have relationships to the expiring assets in the Assets from GetExpiringAssets record collection.</description>
        <name>RelatedAssetIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the error message from the Initiate Renewal action.</description>
        <name>renewalErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>retryCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>2.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>RootAssetIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RootAssetRecords</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Asset</objectType>
    </variables>
    <variables>
        <name>StandaloneAssetIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>stringFaultyAssetIds</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <waits>
        <description>Wait for Order Activation for 2 minutes.</description>
        <name>WaitForOrderActivation</name>
        <elementSubtype>WaitDuration</elementSubtype>
        <label>Wait for Order Activation</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Activate_Order</targetReference>
            </connector>
            <label>el_0</label>
            <offset>2</offset>
            <offsetUnit>Minutes</offsetUnit>
        </waitEvents>
    </waits>
</Flow>
