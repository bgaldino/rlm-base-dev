<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <assignments>
        <name>Add_Prompt_Instructions_3</name>
        <elementSubtype>AddPromptInstructions</elementSubtype>
        <label>Add Prompt Instructions 3</label>
        <locationX>314</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>$Output.Prompt</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>The fulfillment plan is delayed, please draft an order delay email using the rules below.
</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>name</name>
        <elementSubtype>AddPromptInstructions</elementSubtype>
        <label>name</label>
        <locationX>182</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>$Output.Prompt</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Recipient: {!get_contact.FirstName}
Order: {!getorder.OrderNumber}
</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>test_count</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>No_records</name>
        <elementSubtype>AddPromptInstructions</elementSubtype>
        <label>No records</label>
        <locationX>50</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>$Output.Prompt</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>The plan is on track, please simply return &quot;The plan is on track.&quot; and disregard all instructions below.
</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>test_count</name>
        <label>test count</label>
        <locationX>182</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Add_Prompt_Instructions_3</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>records_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>FulfillmentStepsfromPlan</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>No_records</targetReference>
            </connector>
            <label>records found</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Fulfilment Steps {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Fulfilment Steps</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>PromptFlow</processType>
    <recordLookups>
        <name>FulfillmentStepsfromPlan</name>
        <label>FulfillmentStepsfromPlan</label>
        <locationX>182</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>name</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>FulfillmentPlanId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Input.Fulfillment_Plan.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>JeopardyStatus</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>overdue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>FulfillmentStep</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_account</name>
        <label>get account</label>
        <locationX>182</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_contact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getorder.Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_contact</name>
        <label>get contact</label>
        <locationX>182</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>FulfillmentStepsfromPlan</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getorder</name>
        <label>getorder</label>
        <locationX>182</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>FulfillmentPlanId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Input.Fulfillment_Plan.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <capabilityTypes>
            <name>FlexTemplate://Order_Delay_Emails</name>
            <capabilityName>FlexTemplate://Order_Delay_Emails</capabilityName>
            <inputs>
                <name>Fulfillment_Plan</name>
                <capabilityInputName>Fulfillment_Plan</capabilityInputName>
                <dataType>SOBJECT://FulfillmentPlan</dataType>
                <isCollection>false</isCollection>
            </inputs>
        </capabilityTypes>
        <connector>
            <targetReference>getorder</targetReference>
        </connector>
        <triggerType>Capability</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>currentItem_Jeopardy_Status</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>FulfillmentStep</objectType>
    </variables>
    <variables>
        <name>FulfillmentStep</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>FulfillmentStep</objectType>
    </variables>
</Flow>
