{
    "apiVersion": "61.0",
    "excludeIdsFromCSVFiles": "true",
    "objectSets": [
        {
            "objects": [
                {
                    "query": "SELECT ConversionRate, DecimalPlaces, IsActive, IsCorporate, IsoCode FROM CurrencyType",
                    "operation": "Insert",
                    "externalId": "IsoCode",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, CatalogType, Code, Description FROM ProductCatalog",
                    "operation": "Upsert",
                    "externalId": "Name",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, CatalogId, Code, Description, ParentCategoryId, SortOrder FROM ProductCategory",
                    "operation": "Upsert",
                    "externalId": "Name;Catalog.Name;ParentCategory.Name",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, Status, PricingTerm, PricingTermUnit, SellingModelType FROM ProductSellingModel",
                    "operation": "Upsert",
                    "externalId": "Name;SellingModelType",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, Code FROM AttributeCategory",
                    "operation": "Upsert",
                    "externalId": "Name",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, Code, Description, DataType, Status FROM AttributePicklist",
                    "operation": "Upsert",
                    "externalId": "Name"
                },
                {
                    "query": "SELECT Name, Code, IsDefault, DisplayValue, PicklistId, Sequence, Value, DisplayValue  FROM AttributePicklistValue",
                    "operation": "Upsert",
                    "externalId": "Name;Picklist.Name"
                },
                {
                    "query": "SELECT Name, DeveloperName, DataType, IsActive, DefaultValue, Description, Required, Code, Label, PicklistId FROM AttributeDefinition",
                    "operation": "Upsert",
                    "externalId": "Name",
                    "excluded": false
                },
                {
                    "query": "SELECT AttributeCategoryId, AttributeDefinitionId FROM AttributeCategoryAttribute",
                    "operation": "Upsert",
                    "externalId": "AttributeCategory.Name;AttributeDefinition.Name",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, Code, Status FROM ProductClassification",
                    "operation": "Upsert",
                    "externalId": "Name",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, ProductClassificationId, AttributeDefinitionId, AttributeCategoryId, AttributeNameOverride, Status, DefaultValue, DisplayType, IsPriceImpacting, IsReadOnly, IsRequired, MaximumCharacterCount, MaximumValue, MinimumCharacterCount, MinimumValue, Sequence FROM ProductClassificationAttr",
                    "operation": "Upsert",
                    "externalId": "ProductClassification.Name;AttributeDefinition.Name;AttributeCategory.Name",
                    "excluded": false
                },
                {
                    "query": "SELECT AvailabilityDate, BasedOnId, ConfigureDuringSale, CurrencyIsoCode, DecompositionScope, Description, DisplayUrl, Family, FulfillmentQtyCalcMethod, Id, IsActive, IsAssetizable, IsSoldOnlyWithOtherProds, Name, ProductCode, QuantityUnitOfMeasure, SpecificationType, StockKeepingUnit, TaxPolicyId, Type FROM Product2",
                    "operation": "Upsert",
                    "externalId": "Name",
                    "excluded": false
                },
                {
                    "query": "SELECT ProductCategoryId, ProductId, CatalogId, CurrencyIsoCode FROM ProductCategoryProduct",
                    "operation": "Upsert",
                    "externalId": "ProductCategory.Name;Product.Name;Catalog.Name",
                    "excluded": false
                },
                {
                    "query": "SELECT IsDefault, Product2Id, ProductSellingModelId, ProrationPolicyId FROM ProductSellingModelOption",
                    "operation": "Upsert",
                    "externalId": "Product2.Name;ProductSellingModel.Name"
                },
                {
                    "query": "SELECT Name, Code, ParentProductId, Sequence, MinBundleComponents, MaxBundleComponents, Description, CurrencyIsoCode FROM ProductComponentGroup",
                    "operation": "Upsert",
                    "externalId": "Name;ParentProduct.Name",
                    "excluded": false
                },
                {
                    "query": "SELECT Name FROM ProductRelationshipType",
                    "operation": "Upsert",
                    "externalId": "Name",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, ParentProductId, ProductComponentGroupId, ChildProductId, ProductRelationshipTypeId, IsQuantityEditable, IsDefaultComponent, MaxQuantity, MinQuantity, DoesBundlePriceIncludeChild, Quantity, QuantityScaleMethod, IsComponentRequired, Sequence, ParentSellingModelId, ChildSellingModelId, ParentProductRole, ChildProductRole FROM ProductRelatedComponent",
                    "operation": "Upsert",
                    "externalId": "ChildProduct.Name;ParentProduct.Name;ProductComponentGroup.Name;ProductRelationshipType.Name",
                    "excluded": false
                },
                {
                    "query": "SELECT AttributeCategoryId, AttributeDefinitionId, AttributeNameOverride, DefaultValue, Description, DisplayType, ExcludedPicklistValues, HelpText, IsHidden, IsPriceImpacting, IsReadOnly, IsRequired, MaximumCharacterCount, MaximumValue, MinimumCharacterCount, MinimumValue, Name, OverrideContextId, OverriddenProductAttributeDefinitionId, ProductClassificationAttributeId, Product2Id, Sequence, Status FROM ProductAttributeDefinition",
                    "operation": "Upsert",
                    "externalId": "Name;AttributeCategory.Name;AttributeDefinition.Name;ProductClassificationAttribute.Name;Product2.Name;OverriddenProductAttributeDefinition.Name;ProductClassificationAttribute.Name;OverrideContext.Name",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, IsActive, IsStandard, CostBookId, ValidFrom, ValidTo, Description FROM Pricebook2",
                    "operation": "Upsert",
                    "externalId": "Name;IsStandard",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, IsDefault, EffectiveFrom, EffectiveTo FROM CostBook",
                    "operation": "Upsert",
                    "externalId": "Name;IsDefault",
                    "excluded": false
                },
                {
                    "query": "SELECT IsActive, LowerBound, PriceAdjustmentScheduleId, Product2Id, ProductSellingModelId, ScheduleType, SellingModelType, TierType, TierValue, UpperBound, EffectiveFrom, EffectiveTo, CurrencyIsoCode FROM PriceAdjustmentTier",
                    "operation": "Upsert",
                    "externalId": "PriceAdjustmentSchedule.Name;Product2.Name;ProductSellingModel.Name,TierType,TierValue,UpperBound,LowerBound,CurrencyIsoCode",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, IsActive, AdjustmentMethod, EffectiveFrom, EffectiveTo, Pricebook2Id, ScheduleType FROM PriceAdjustmentSchedule",
                    "operation": "Upsert",
                    "externalId": "Name",
                    "excluded": false
                },
                {
                    "query": "SELECT Name FROM AttributeBasedAdjRule",
                    "operation": "Upsert",
                    "externalId": "Name",
                    "excluded": false
                },
                {
                    "query": "SELECT AttributeBasedAdjRuleId, AttributeDefinitionId, BooleanValue, DateValue, DateTimeValue, DoubleValue, IntegerValue, Operator, ProductId, StringValue FROM AttributeAdjustmentCondition",
                    "operation": "Upsert",
                    "externalId": "AttributeBasedAdjRule.Name;AttributeDefinition.Name;Product.Name",
                    "excluded": false
                },
                {
                    "query": "SELECT AdjustmentType, AdjustmentValue, AttributeAdjConditionsHash, AttributeBasedAdjRuleId, EffectiveFrom, EffectiveTo, PriceAdjustmentScheduleId, PricingTerm, PricingTermUnit, ProductId, ProductSellingModelId, ScheduleType, SellingModelType, CurrencyIsoCode FROM AttributeBasedAdjustment",
                    "operation": "Upsert",
                    "externalId": "AttributeBasedAdjRule.Name;PriceAdjustmentSchedule.Name;Product.Name;ProductSellingModel.Name;CurrencyIsoCode",
                    "excluded": false
                },
                {
                    "query": "SELECT AdjustmentType, AdjustmentValue, EffectiveFrom, EffectiveTo, Name, PriceAdjustmentScheduleId, ProductId, ParentProductId, RootBundleId, ProductSellingModelId, ParentProductSellingModelId, PricingTerm, PricingTermUnit, RootProductSellingModelId, ScheduleType, SellingModelType, CurrencyIsoCode FROM BundleBasedAdjustment",
                    "operation": "Upsert",
                    "externalId": "PriceAdjustmentSchedule.Name;Product.Name;ParentProduct.Name;RootBundle.Name;ProductSellingModel.Name;ParentProductSellingModel.Name;RootProductSellingModel.Name;CurrencyIsoCode",
                    "excluded": false
                },
                {
                    "query": "SELECT Name, IsActive, IsDerived, Pricebook2Id, Product2Id, ProductSellingModelId, UnitPrice, CurrencyIsoCode FROM PricebookEntry ORDER BY Pricebook2.Name ASC, CurrencyIsoCode DESC, Name ASC, ProductSellingModel.Name ASC",
                    "operation": "Upsert",
                    "externalId": "Name;Pricebook2.Name;Product2.Name;ProductSellingModel.Name;CurrencyIsoCode",
                    "excluded": false
                },
                {
                    "query": "SELECT PricebookId, PricebookEntryId, ProductId, ContributingProductId, ProductSellingModelId, DerivedPricingScope, Formula, EffectiveFrom, EffectiveTo, PricingSource, CurrencyIsoCode FROM PricebookEntryDerivedPrice ORDER BY Pricebook.Name ASC, CurrencyIsoCode DESC, Name ASC, ProductSellingModel.Name ASC",
                    "operation": "Upsert",
                    "externalId": "Pricebook.Name;PricebookEntry.Name;Product.Name;ContributingProduct.Name;ProductSellingModel.Name;CurrencyIsoCode",
                    "excluded": false
                },
                {
                    "query": "SELECT Cost, CostBookId, EffectiveFrom, EffectiveTo, ProductId, Description, CurrencyIsoCode FROM CostBookEntry ORDER BY CostBook.Name ASC, CurrencyIsoCode DESC, Name ASC",
                    "operation": "Upsert",
                    "externalId": "CostBook.Name;Product.Name;CurrencyIsoCode",
                    "excluded": false
                },
                {
                    "query": "SELECT ContractId, DiscountType, DiscountValue, EndDate, ItemId$Product2, Price, ProductSellingModelId, SellingModelType, StartDate, CurrencyIsoCode FROM ContractItemPrice ORDER BY Contract.ContractNumber ASC, CurrencyIsoCode DESC, Name ASC",
                    "operation": "Upsert",
                    "externalId": "Contract.ContractNumber;ProductSellingModel.Name;CurrencyIsoCode",
                    "excluded": false
                }
            ]
        }
    ],
    "orgs": []
}