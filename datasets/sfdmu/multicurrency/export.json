{
  "apiVersion": "62.0",
  "excludeIdsFromCSVFiles": "true",
  "objectSets": [
    {
      "objects": [
        {
          "query": "SELECT ConversionRate, DecimalPlaces, IsActive, IsCorporate, IsoCode FROM CurrencyType",
          "operation": "Insert",
          "externalId": "IsoCode",
          "excluded": false
        },
        {
          "query": "SELECT Name, CatalogType, Code, Description FROM ProductCatalog",
          "operation": "Upsert",
          "externalId": "Name",
          "excluded": false
        },
        {
          "query": "SELECT Name, CatalogId, Code, Description, ParentCategoryId, SortOrder FROM ProductCategory",
          "operation": "Upsert",
          "externalId": "Name;Catalog.Code;ParentCategory.Name",
          "excluded": false
        },
        {
          "query": "SELECT Name, Status, PricingTerm, PricingTermUnit, SellingModelType FROM ProductSellingModel",
          "operation": "Upsert",
          "externalId": "Name;SellingModelType",
          "excluded": false
        },
        {
          "query": "SELECT Name, Code FROM AttributeCategory",
          "operation": "Upsert",
          "externalId": "Code",
          "excluded": false
        },
        {
          "query": "SELECT CurrencyIsoCode, DataType, Description, Name, Status FROM AttributePicklist",
          "operation": "Upsert",
          "externalId": "Name"
        },
        {
          "query": "SELECT Name, Code, IsDefault, DisplayValue, PicklistId, Sequence, Value, DisplayValue  FROM AttributePicklistValue",
          "operation": "Upsert",
          "externalId": "Name;Picklist.Name"
        },
        {
          "query": "SELECT Code, CurrencyIsoCode, DataType, DefaultHelpText, DefaultValue, Description, DeveloperName, IsActive, IsRequired, Label, Name, PicklistId, SourceSystemIdentifier, UnitOfMeasureId, ValueDescription FROM AttributeDefinition",
          "operation": "Upsert",
          "externalId": "Code",
          "excluded": false
        },
        {
          "query": "SELECT AttributeCategoryId, AttributeDefinitionId FROM AttributeCategoryAttribute",
          "operation": "Upsert",
          "externalId": "AttributeCategory.Name;AttributeDefinition.Code",
          "excluded": false
        },
        {
          "query": "SELECT Name, Code, Status FROM ProductClassification",
          "operation": "Upsert",
          "externalId": "Code",
          "excluded": false
        },
        {
          "query": "SELECT AttributeCategoryId, AttributeDefinitionId, AttributeNameOverride, CurrencyIsoCode, DefaultValue, Description, DisplayType, ExcludedPicklistValues, HelpText, IsHidden, IsPriceImpacting, IsReadOnly, IsRequired, MaximumCharacterCount, MaximumValue, MinimumCharacterCount, MinimumValue, Name, ProductClassificationId, Sequence, Status, StepValue, ValueDescription FROM ProductClassificationAttr",
          "operation": "Upsert",
          "externalId": "ProductClassification.Code;AttributeDefinition.Code;AttributeCategory.Code",
          "excluded": false
        },
        {
          "query": "SELECT BasedOnId, ConfigureDuringSale, CurrencyIsoCode, Description, DisplayUrl, Family, IsActive, IsAssetizable, IsSoldOnlyWithOtherProds, Name, ProductCode, QuantityUnitOfMeasure, SpecificationType, StockKeepingUnit, Type FROM Product2",
          "operation": "Upsert",
          "externalId": "StockKeepingUnit",
          "excluded": false
        },
        {
          "query": "SELECT ProductCategoryId, ProductId, CatalogId, CurrencyIsoCode FROM ProductCategoryProduct",
          "operation": "Upsert",
          "externalId": "ProductCategory.Name;Product.StockKeepingUnit;Catalog.Code",
          "excluded": false
        },
        {
          "query": "SELECT IsDefault, Product2Id, ProductSellingModelId, ProrationPolicyId FROM ProductSellingModelOption",
          "operation": "Upsert",
          "externalId": "Product2.StockKeepingUnit;ProductSellingModel.Name"
        },
        {
          "query": "SELECT Name, Code, ParentProductId, Sequence, MinBundleComponents, MaxBundleComponents, Description, CurrencyIsoCode FROM ProductComponentGroup",
          "operation": "Upsert",
          "externalId": "Code;ParentProduct.StockKeepingUnit",
          "excluded": false
        },
        {
          "query": "SELECT AssociatedProductRoleCat, MainProductRoleCat, Name FROM ProductRelationshipType",
          "operation": "Upsert",
          "externalId": "Name",
          "excluded": false
        },
        {
          "query": "SELECT ChildProductClassificationId, ChildProductId, ChildProductRole, ChildSellingModelId, DoesBundlePriceIncludeChild, Id, IsComponentRequired, IsDefaultComponent, IsQuantityEditable, MaxQuantity, MinQuantity, ParentProductId, ParentProductRole, ParentSellingModelId, ProductComponentGroupId, ProductRelationshipTypeId, Quantity, QuantityScaleMethod, Sequence FROM ProductRelatedComponent",
          "operation": "Upsert",
          "externalId": "ChildProductClassification.Code;ChildProduct.StockKeepingUnit;ParentProduct.StockKeepingUnit;ProductComponentGroup.Code;ProductRelationshipType.Name",
          "excluded": false
        },
        {
          "query": "SELECT AttributeCategoryId, AttributeDefinitionId, AttributeNameOverride, CurrencyIsoCode, DefaultValue, Description, DisplayType, ExcludedPicklistValues, HelpText, IsHidden, IsPriceImpacting, IsReadOnly, IsRequired, MaximumCharacterCount, MaximumValue, MinimumCharacterCount, MinimumValue, Name, OverriddenProductAttributeDefinitionId, Product2Id, ProductClassificationAttributeId, Sequence, Status, StepValue, ValueDescription FROM ProductAttributeDefinition",
          "operation": "Upsert",
          "externalId": "AttributeCategory.Code;AttributeDefinition.Code;ProductClassificationAttribute.Name;Product2.StockKeepingUnit",
          "excluded": false
        },
        {
          "query": "SELECT Name, IsActive, IsStandard, CostBookId, ValidFrom, ValidTo, Description FROM Pricebook2",
          "operation": "Upsert",
          "externalId": "Name;IsStandard",
          "excluded": false
        },
        {
          "query": "SELECT Name, IsDefault, EffectiveFrom, EffectiveTo FROM CostBook",
          "operation": "Upsert",
          "externalId": "Name;IsDefault",
          "excluded": false
        },
        {
          "query": "SELECT AdjustmentType, CurrencyIsoCode, EffectiveFrom, EffectiveTo, LowerBound, PriceAdjustmentScheduleId, PricingTerm, PricingTermUnit, Product2Id, ProductSellingModelId, ScheduleType, SellingModelType, TierType, TierValue, UpperBound FROM PriceAdjustmentTier",
          "operation": "Upsert",
          "externalId": "PriceAdjustmentSchedule.Name;Product2.StockKeepingUnit;ProductSellingModel.Name,TierType,TierValue,UpperBound,LowerBound,CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT AdjustmentMethod, ContractId, CurrencyIsoCode, Description, EffectiveFrom, EffectiveTo, IsActive, Name, Pricebook2Id, ScheduleType FROM PriceAdjustmentSchedule",
          "operation": "Upsert",
          "externalId": "Name;Contract.ContractNumber;CurrencyIsoCode;Pricebook2.Name",
          "excluded": false
        },
        {
          "query": "SELECT Name FROM AttributeBasedAdjRule",
          "operation": "Upsert",
          "externalId": "Name",
          "excluded": false
        },
        {
          "query": "SELECT AttributeBasedAdjRuleId, AttributeDefinitionId, BooleanValue, DateValue, DateTimeValue, DoubleValue, IntegerValue, Operator, ProductId, StringValue FROM AttributeAdjustmentCondition",
          "operation": "Upsert",
          "externalId": "AttributeBasedAdjRule.Name;AttributeDefinition.Code;Product.StockKeepingUnit",
          "excluded": false
        },
        {
          "query": "SELECT AdjustmentType, AdjustmentValue, AttributeAdjConditionsHash, AttributeBasedAdjRuleId, AttributeCount, CurrencyIsoCode, EffectiveFrom, EffectiveTo, PriceAdjustmentScheduleId, PricingTerm, PricingTermUnit, ProductId, ProductSellingModelId, ScheduleType, SellingModelType FROM AttributeBasedAdjustment",
          "operation": "Upsert",
          "externalId": "AttributeBasedAdjRule.Name;PriceAdjustmentSchedule.Name;Product.StockKeepingUnit;ProductSellingModel.Name;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT AdjustmentType, AdjustmentValue, EffectiveFrom, EffectiveTo, Name, PriceAdjustmentScheduleId, ProductId, ParentProductId, RootBundleId, ProductSellingModelId, ParentProductSellingModelId, PricingTerm, PricingTermUnit, RootProductSellingModelId, ScheduleType, SellingModelType, CurrencyIsoCode FROM BundleBasedAdjustment",
          "operation": "Upsert",
          "externalId": "PriceAdjustmentSchedule.Name;Product.StockKeepingUnit;ParentProduct.StockKeepingUnit;RootBundle.StockKeepingUnit;ProductSellingModel.Name;ParentProductSellingModel.Name;RootProductSellingModel.Name;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT Name, IsActive, IsDerived, Pricebook2Id, Product2Id, ProductSellingModelId, UnitPrice, CurrencyIsoCode FROM PricebookEntry ORDER BY Pricebook2.Name ASC, CurrencyIsoCode DESC, Name ASC, ProductSellingModel.Name ASC",
          "operation": "Upsert",
          "externalId": "Name;Pricebook2.Name;Product2.StockKeepingUnit;ProductSellingModel.Name;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT PricebookId, PricebookEntryId, ProductId, ContributingProductId, ProductSellingModelId, DerivedPricingScope, Formula, EffectiveFrom, EffectiveTo, PricingSource, CurrencyIsoCode FROM PricebookEntryDerivedPrice ORDER BY Pricebook.Name ASC, CurrencyIsoCode DESC, Name ASC, ProductSellingModel.Name ASC",
          "operation": "Upsert",
          "externalId": "Pricebook.Name;PricebookEntry.Name;Product.StockKeepingUnit;ContributingProduct.StockKeepingUnit;ProductSellingModel.Name;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT Cost, CostBookId, EffectiveFrom, EffectiveTo, ProductId, Description, CurrencyIsoCode FROM CostBookEntry ORDER BY CostBook.Name ASC, CurrencyIsoCode DESC, Name ASC",
          "operation": "Upsert",
          "externalId": "CostBook.Name;Product.StockKeepingUnit;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT ContractId, DiscountType, DiscountValue, EndDate, ItemId$Product2, Price, ProductSellingModelId, SellingModelType, StartDate, CurrencyIsoCode FROM ContractItemPrice ORDER BY Contract.ContractNumber ASC, CurrencyIsoCode DESC, Name ASC",
          "operation": "Upsert",
          "externalId": "Contract.ContractNumber;ProductSellingModel.Name;CurrencyIsoCode",
          "excluded": false
        }
      ]
    }
  ],
  "orgs": []
}
