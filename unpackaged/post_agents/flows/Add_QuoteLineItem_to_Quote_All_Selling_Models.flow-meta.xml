<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Calls an action that creates a quote.</description>
        <name>InvokePlaceSalesTransactionApi</name>
        <label>Invoke Place Sales Transaction API</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>placeSalesTransaction</actionName>
        <actionType>placeSalesTransaction</actionType>
        <connector>
            <targetReference>Result</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorMessageAssignment</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>graph</name>
            <value>
                <elementReference>placeSalesTransactionGraph</elementReference>
            </value>
        </inputParameters>
        <nameSegment>placeSalesTransaction</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>isSuccess</assignToReference>
            <name>isSuccess</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>errorResponse</assignToReference>
            <name>errorResponse</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>Handle the runtime exception while calling the Place Sales Transaction invocable action.</description>
        <name>ErrorMessageAssignment</name>
        <label>Error Message Assignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>isSuccess</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Sets the start date and period boundary fields on the quote line item record for evergreen products.</description>
        <name>Set_Start_End_Date_and_Period_Boundary_Variables_Termed_Annual</name>
        <label>Set Start/End Date and Period Boundary Variables - Termed Annual</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>startDateRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>StartDate</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>startDateRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>startDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>startDateRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>periodBoundaryRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PeriodBoundary</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>periodBoundaryRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Anniversary</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>periodBoundaryRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>endDateRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>EndDate</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>endDateRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CalculatedEndDateString</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>endDateRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>billingFrequencyRecordmapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>BillingFrequency</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>billingFrequencyRecordmapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Annual</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>billingFrequencyRecordmapWrapper</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SetPlaceSalesTransactionGraphVariables</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the start date and period boundary fields on the quote line item record for evergreen products.</description>
        <name>Set_Start_End_Date_and_Period_Boundary_Variables_Termed_Monthly</name>
        <label>Set Start/End Date and Period Boundary Variables - Termed Monthly</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>startDateRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>StartDate</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>startDateRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>startDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>startDateRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>periodBoundaryRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PeriodBoundary</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>periodBoundaryRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Anniversary</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>periodBoundaryRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>endDateRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>EndDate</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>endDateRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CalculatedEndDateString</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>endDateRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>billingFrequencyRecordmapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>BillingFrequency</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>billingFrequencyRecordmapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Monthly</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>billingFrequencyRecordmapWrapper</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SetPlaceSalesTransactionGraphVariables</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set the error message from the Place Sales Transaction invocable action.</description>
        <name>SetErrorMessage</name>
        <label>Set Error Message</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop1.message</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Sets the values for the placeSalesTransactionGraph apex-defined variable.</description>
        <name>SetPlaceSalesTransactionGraphVariables</name>
        <label>Set Place Sales Transaction Graph Variables</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>placeSalesTransactionGraph.graphId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>placeholder</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>placeSalesTransactionGraph.records</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>quoteRecordReference</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>placeSalesTransactionGraph.records</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>quoteLineRecordReference</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>InvokePlaceSalesTransactionApi</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets priceBookId to the ID of the price book for the opportunity related to the quote in the Quote from Get Quote variable.</description>
        <name>SetPriceBookToOpportunityPriceBook</name>
        <label>Set Price Book to Opportunity Price Book</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>pricebookId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Opportunity.Pricebook2Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetProduct</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets priceBookId to the ID of the price book for the quote in the Quote from Get Quote variable.</description>
        <name>SetPriceBookToQuotePriceBook</name>
        <label>Set Price Book to Quote Price Book</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>pricebookId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Pricebook2Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetProduct</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the fields on the quote by populating the record map wrappers. This element is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>SetQuoteFields</name>
        <label>Set Quote Fields</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>quoteIdRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>QuoteId</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteIdRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>productRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Product2Id</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>productRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>productId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>pricebookEntryRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PricebookEntryId</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>pricebookEntryRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetPriceBookEntry.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quantityRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Quantity</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quantityRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>quantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>pricebookNameRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Pricebook2Id</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>pricebookNameRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pricebookId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SetQuoteLineItemRecordReferenceVariables</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the fields for the quoteLineItemRecordReference apex-defined variable.</description>
        <name>SetQuoteLineItemRecordReferenceVariables</name>
        <label>Set Quote Line Item Record Reference Variables</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>quoteRecordReference.referenceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteRecordReference.record.id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteRecordReference.record.type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Quote</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteRecordReference.record.method</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PATCH</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.referenceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>placeholder</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>QuoteLineItem</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.method</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>POST</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>quoteIdRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>pricebookEntryRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>productRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>quantityRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>pricebookNameRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Determine_Product_Selling_Model</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the start date and period boundary fields on the quote line item record for evergreen products.</description>
        <name>SetStartDateandPeriodBoundaryVariables</name>
        <label>Set Start Date and Period Boundary Variables</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>startDateRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>StartDate</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>startDateRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>startDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>startDateRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>periodBoundaryRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PeriodBoundary</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>periodBoundaryRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Anniversary</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>periodBoundaryRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SetPlaceSalesTransactionGraphVariables</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Determine_Product_Selling_Model</name>
        <label>Determine Product Selling Model</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>SetPlaceSalesTransactionGraphVariables</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsEvergreen</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetProductSellingModel.SellingModelType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Evergreen</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetStartDateandPeriodBoundaryVariables</targetReference>
            </connector>
            <label>Is Evergreen</label>
        </rules>
        <rules>
            <name>Is_Termed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetProductSellingModel.SellingModelType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TermDefined</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetProductSellingModel.PricingTermUnit</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Annual</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Start_End_Date_and_Period_Boundary_Variables_Termed_Annual</targetReference>
            </connector>
            <label>Is Termed Annual</label>
        </rules>
        <rules>
            <name>Is_Termed_Monthly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetProductSellingModel.SellingModelType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TermDefined</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetProductSellingModel.PricingTermUnit</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Months</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Start_End_Date_and_Period_Boundary_Variables_Termed_Monthly</targetReference>
            </connector>
            <label>Is Termed Monthly</label>
        </rules>
        <rules>
            <name>One_Time</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetProductSellingModel.SellingModelType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>OneTime</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetPlaceSalesTransactionGraphVariables</targetReference>
            </connector>
            <label>One-Time</label>
        </rules>
    </decisions>
    <decisions>
        <description>Handle the output from Place Sales Transaction.</description>
        <name>Result</name>
        <label>Result</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Loop1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Failure</defaultConnectorLabel>
        <rules>
            <name>Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isSuccess</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Success</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines which price book is stored for the quote. Checks if the price book is referenced on the quote in the Quote from Get Quote variable, if there’s a price book referenced on the opportunity related to the record in the Quote from Get Quote variable, or there isn’t a price book referenced on either the quote or the opportunity.</description>
        <name>SetWhichPriceBook</name>
        <label>Set Which PriceBook?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>GetStandardPriceBook</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other (Default)</defaultConnectorLabel>
        <rules>
            <name>HasQuotePriceBook</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetQuote.Pricebook2Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetPriceBookToQuotePriceBook</targetReference>
            </connector>
            <label>Quote Price Book</label>
        </rules>
        <rules>
            <name>HasOpportunityPriceBook</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetQuote.Opportunity.Pricebook2Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetPriceBookToOpportunityPriceBook</targetReference>
            </connector>
            <label>Opportunity Price Book</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CalculatedEndDateString</name>
        <dataType>String</dataType>
        <expression>TEXT(YEAR( ADDMONTHS(DATEVALUE({!startDate}),12) -1)) &amp;&quot;-&quot;&amp; TEXT(MONTH( ADDMONTHS(DATEVALUE({!startDate}),12) -1)) &amp;&quot;-&quot;&amp; TEXT(DAY( ADDMONTHS(DATEVALUE({!startDate}),12) -1))</expression>
    </formulas>
    <formulas>
        <description>Calculate current date, the format is yyyy-mm-dd. If no StartDate input, the CurrentStartDate will be used in QuoteLineItem.</description>
        <name>CurrentStartDate</name>
        <dataType>String</dataType>
        <expression>TEXT(Year({!$Flow.CurrentDate})) + &quot;-&quot; + TEXT(Month({!$Flow.CurrentDate})) + &quot;-&quot; + TEXT(Day({!$Flow.CurrentDate}))</expression>
    </formulas>
    <interviewLabel>Add QuoteLineItem to Quote - All Selling Models {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Add QuoteLineItem to Quote - All Selling Models</label>
    <loops>
        <description>Loop through all error responses.</description>
        <name>Loop1</name>
        <label>Loop 1</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>errorResponse</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SetErrorMessage</targetReference>
        </nextValueConnector>
    </loops>
    <overriddenFlow>quotingAI__addQuoteLineItemToQuote</overriddenFlow>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets the default product selling model option by checking for the product ID that’s set as the default and matches the ID in the Product from Get Product variable. Stores the result in the Product Selling Model Option from Get Default Product Selling Model Option variable.</description>
        <name>GetDefaultProductSellingModelOption</name>
        <label>Get Default Product Selling Model Option</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetProductSellingModel</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Product2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetProduct.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsDefault</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProductSellingModelOption</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the price book entry with a price book ID that matches the PriceBookId variable, a product ID that matches the productId variable, and a product selling model ID that matches the ID in the Product Selling Model from Get Default Product Selling Model variable. Stores the result in the Price Book Entry from Get Price Book Entry variable.</description>
        <name>GetPriceBookEntry</name>
        <label>Get Price Book Entry</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SetQuoteFields</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Pricebook2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>pricebookId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>productId</elementReference>
            </value>
        </filters>
        <filters>
            <field>ProductSellingModelId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetProductSellingModel.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PricebookEntry</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the product record with an ID that matches the productId passed into the flow. Stores the value in the Product from Get Product variable.</description>
        <name>GetProduct</name>
        <label>Get Product</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetDefaultProductSellingModelOption</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>productId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the product selling model with an ID that matches the ID in the Product Selling Model Option from Get Default Product Selling Model Option variable. Stores the result in the Product Selling Model from Get Default Product Selling Model variable.</description>
        <name>GetProductSellingModel</name>
        <label>Get Product Selling Model</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetPriceBookEntry</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetDefaultProductSellingModelOption.ProductSellingModelId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProductSellingModel</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the quote record with an ID that matches the quoteId passed into the flow. Stores the result in the Quote from Get Quote variable.</description>
        <name>GetQuote</name>
        <label>Get Quote</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SetWhichPriceBook</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>quoteId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Quote</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the standard price book. The flow uses the standard price book when the quote or opportunity doesn&apos;t have a related price book. Stores the ID of the PriceBookId variable.</description>
        <name>GetStandardPriceBook</name>
        <label>Get Standard Price Book</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetProduct</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsStandard</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Pricebook2</object>
        <outputAssignments>
            <assignToReference>pricebookId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetQuote</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>billingFrequencyRecordmapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>endDateRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Provides an error message if applicable.</description>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>An apex defined type that contains a list of errors with errorMessage, referenceId, and errorCode</description>
        <name>errorResponse</name>
        <apexClass>RevSalesTrxn__PlaceSalesTransactionErrorResponse</apexClass>
        <dataType>Apex</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Indicates success or failure.</description>
        <name>isSuccess</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the record map wrapper Apex-defined type that specifies the QuoteLineItem.PeriodBoundary field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>periodBoundaryRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores values for the Graph Apex-defined type that’s used as an input for the PlaceSalesTransaction invocable action.</description>
        <name>placeSalesTransactionGraph</name>
        <apexClass>RevSalesTrxn__Graph</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the record map wrapper Apex-defined type that specifies the QuoteLineItem.PricebookEntry field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>pricebookEntryRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the price book record that’s used to add a quote line item to the quote. If a price book isn’t specified on the quote or the opportunity, then the flow uses the standard pricebook as a default.</description>
        <name>pricebookId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the record map wrapper Apex-defined type that specifies the QuoteLineItem.Pricebook2Id field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>pricebookNameRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the product that’s passed into the flow.</description>
        <name>productId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the record map wrapper Apex-defined type that specifies the QuoteLineItem.Product2 field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>productRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the quantity of the product that’s passed into the flow and added to the quote line item. If no quantity is specified, the flow uses the default of 1.</description>
        <name>quantity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the record map wrapper Apex-defined type that specifies the QuoteLineItem.PricebookEntry field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>quantityRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the quote record that’s passed into the flow.</description>
        <name>quoteId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the record map wrapper Apex-defined type that specifies the QuoteLineItem.QuoteId field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>quoteIdRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the record reference for the quote line item that this flow creates. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>quoteLineRecordReference</name>
        <apexClass>RevSalesTrxn__RecordReference</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the record reference for the quote that this flow modifies. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>quoteRecordReference</name>
        <apexClass>RevSalesTrxn__RecordReference</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the startDate for subscription products passed into the flow. Default value is the current start date. Optional user input.</description>
        <name>startDate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>CurrentStartDate</elementReference>
        </value>
    </variables>
    <variables>
        <description>Stores the record map wrapper Apex-defined type that specifies the QuoteLineItem.StartDate field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>startDateRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
